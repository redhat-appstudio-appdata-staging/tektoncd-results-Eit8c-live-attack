apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/created-by: application-service
    app.kubernetes.io/instance: tektoncd-results-ec5c
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: tektoncd-results-ec5c
    app.kubernetes.io/part-of: tektoncd-results
    app.kubernetes.io/version: devel
  name: tektoncd-results-ec5c
  namespace: tekton-pipelines
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app.kubernetes.io/instance: tektoncd-results-ec5c
      app.kubernetes.io/name: tekton-results-api
  strategy: {}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: tektoncd-results-ec5c
        app.kubernetes.io/name: tekton-results-api
        app.kubernetes.io/version: devel
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: tekton-results-postgres-service.tekton-pipelines.svc.cluster.local
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: POSTGRES_USER
              name: tekton-results-postgres
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: tekton-results-postgres
        - name: DB_NAME
          value: tekton-results
        image: ko://github.com/tektoncd/results/cmd/api
        name: api
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /etc/tekton/results
          name: config
          readOnly: true
        - mountPath: /etc/tls
          name: tls
          readOnly: true
      initContainers:
      - env:
        - name: DB_HOST
          value: tekton-results-postgres-service.tekton-pipelines.svc.cluster.local
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: POSTGRES_USER
              name: tekton-results-postgres
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: tekton-results-postgres
        - name: DB_NAME
          value: tekton-results
        image: ko://github.com/tektoncd/results/tools/migrator
        name: migrator
        resources: {}
        volumeMounts:
        - mountPath: /etc/tekton/results
          name: config
          readOnly: true
      serviceAccountName: tekton-results-api
      volumes:
      - configMap:
          name: tekton-results-api-config
        name: config
      - name: tls
        secret:
          secretName: tekton-results-tls
status: {}
